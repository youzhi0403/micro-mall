<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youzhi.mapper.GoodMapper">
  <resultMap id="BaseResultMap" type="com.youzhi.model.Good">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="imgs" jdbcType="VARCHAR" property="imgs" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="function" jdbcType="VARCHAR" property="function" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="good_number" jdbcType="VARCHAR" property="goodNumber" />
    <result column="good_type" jdbcType="VARCHAR" property="goodType" />
    <result column="approval_number" jdbcType="VARCHAR" property="approvalNumber" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="usage" jdbcType="VARCHAR" property="usage" />
    <result column="common_name" jdbcType="VARCHAR" property="commonName" />
    <result column="untoward_effect" jdbcType="VARCHAR" property="untowardEffect" />
    <result column="taboo" jdbcType="VARCHAR" property="taboo" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, full_name, imgs, price, sales, function, manufacturer, good_number, good_type, 
    approval_number, specification, usage, common_name, untoward_effect, taboo, inventory, 
    create_time, update_time, create_user_id, update_user_id, status, delete_status
  </sql>
  <select id="selectByExample" parameterType="com.youzhi.model.GoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.youzhi.model.GoodExample">
    delete from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.youzhi.model.Good">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into good (name, full_name, imgs, 
      price, sales, function, 
      manufacturer, good_number, good_type, 
      approval_number, specification, usage, 
      common_name, untoward_effect, taboo, 
      inventory, create_time, update_time, 
      create_user_id, update_user_id, status, 
      delete_status)
    values (#{name,jdbcType=VARCHAR}, #{fullName,jdbcType=VARCHAR}, #{imgs,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{sales,jdbcType=INTEGER}, #{function,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{goodNumber,jdbcType=VARCHAR}, #{goodType,jdbcType=VARCHAR}, 
      #{approvalNumber,jdbcType=VARCHAR}, #{specification,jdbcType=VARCHAR}, #{usage,jdbcType=VARCHAR}, 
      #{commonName,jdbcType=VARCHAR}, #{untowardEffect,jdbcType=VARCHAR}, #{taboo,jdbcType=VARCHAR}, 
      #{inventory,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{deleteStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youzhi.model.Good">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="imgs != null">
        imgs,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="function != null">
        function,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="goodNumber != null">
        good_number,
      </if>
      <if test="goodType != null">
        good_type,
      </if>
      <if test="approvalNumber != null">
        approval_number,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="usage != null">
        usage,
      </if>
      <if test="commonName != null">
        common_name,
      </if>
      <if test="untowardEffect != null">
        untoward_effect,
      </if>
      <if test="taboo != null">
        taboo,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null">
        #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="function != null">
        #{function,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="goodNumber != null">
        #{goodNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodType != null">
        #{goodType,jdbcType=VARCHAR},
      </if>
      <if test="approvalNumber != null">
        #{approvalNumber,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="usage != null">
        #{usage,jdbcType=VARCHAR},
      </if>
      <if test="commonName != null">
        #{commonName,jdbcType=VARCHAR},
      </if>
      <if test="untowardEffect != null">
        #{untowardEffect,jdbcType=VARCHAR},
      </if>
      <if test="taboo != null">
        #{taboo,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.youzhi.model.GoodExample" resultType="java.lang.Integer">
    select count(*) from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update good
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.fullName != null">
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.imgs != null">
        imgs = #{record.imgs,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.function != null">
        function = #{record.function,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.goodNumber != null">
        good_number = #{record.goodNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.goodType != null">
        good_type = #{record.goodType,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalNumber != null">
        approval_number = #{record.approvalNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.specification != null">
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.usage != null">
        usage = #{record.usage,jdbcType=VARCHAR},
      </if>
      <if test="record.commonName != null">
        common_name = #{record.commonName,jdbcType=VARCHAR},
      </if>
      <if test="record.untowardEffect != null">
        untoward_effect = #{record.untowardEffect,jdbcType=VARCHAR},
      </if>
      <if test="record.taboo != null">
        taboo = #{record.taboo,jdbcType=VARCHAR},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.deleteStatus != null">
        delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update good
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      imgs = #{record.imgs,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      sales = #{record.sales,jdbcType=INTEGER},
      function = #{record.function,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      good_number = #{record.goodNumber,jdbcType=VARCHAR},
      good_type = #{record.goodType,jdbcType=VARCHAR},
      approval_number = #{record.approvalNumber,jdbcType=VARCHAR},
      specification = #{record.specification,jdbcType=VARCHAR},
      usage = #{record.usage,jdbcType=VARCHAR},
      common_name = #{record.commonName,jdbcType=VARCHAR},
      untoward_effect = #{record.untowardEffect,jdbcType=VARCHAR},
      taboo = #{record.taboo,jdbcType=VARCHAR},
      inventory = #{record.inventory,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      delete_status = #{record.deleteStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzhi.model.Good">
    update good
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null">
        imgs = #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="function != null">
        function = #{function,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="goodNumber != null">
        good_number = #{goodNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodType != null">
        good_type = #{goodType,jdbcType=VARCHAR},
      </if>
      <if test="approvalNumber != null">
        approval_number = #{approvalNumber,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="usage != null">
        usage = #{usage,jdbcType=VARCHAR},
      </if>
      <if test="commonName != null">
        common_name = #{commonName,jdbcType=VARCHAR},
      </if>
      <if test="untowardEffect != null">
        untoward_effect = #{untowardEffect,jdbcType=VARCHAR},
      </if>
      <if test="taboo != null">
        taboo = #{taboo,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzhi.model.Good">
    update good
    set name = #{name,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      imgs = #{imgs,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      sales = #{sales,jdbcType=INTEGER},
      function = #{function,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      good_number = #{goodNumber,jdbcType=VARCHAR},
      good_type = #{goodType,jdbcType=VARCHAR},
      approval_number = #{approvalNumber,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR},
      usage = #{usage,jdbcType=VARCHAR},
      common_name = #{commonName,jdbcType=VARCHAR},
      untoward_effect = #{untowardEffect,jdbcType=VARCHAR},
      taboo = #{taboo,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>