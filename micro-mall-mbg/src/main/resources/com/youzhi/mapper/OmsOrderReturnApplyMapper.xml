<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youzhi.mapper.OmsOrderReturnApplyMapper">
  <resultMap id="BaseResultMap" type="com.youzhi.model.OmsOrderReturnApply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="company_address_id" jdbcType="INTEGER" property="companyAddressId" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="return_amount" jdbcType="DECIMAL" property="returnAmount" />
    <result column="return_name" jdbcType="VARCHAR" property="returnName" />
    <result column="return_phone" jdbcType="VARCHAR" property="returnPhone" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="handle_man" jdbcType="VARCHAR" property="handleMan" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="good_pic" jdbcType="VARCHAR" property="goodPic" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="good_count" jdbcType="INTEGER" property="goodCount" />
    <result column="good_price" jdbcType="DECIMAL" property="goodPrice" />
    <result column="good_real_price" jdbcType="DECIMAL" property="goodRealPrice" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="proof_pics" jdbcType="VARCHAR" property="proofPics" />
    <result column="handle_remark" jdbcType="VARCHAR" property="handleRemark" />
    <result column="receive_man" jdbcType="VARCHAR" property="receiveMan" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="receive_remark" jdbcType="VARCHAR" property="receiveRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, order_num, company_address_id, good_id, create_time, user_nickname, 
    return_amount, return_name, return_phone, status, handle_man, handle_time, good_pic, 
    good_name, good_count, good_price, good_real_price, reason, description, proof_pics, 
    handle_remark, receive_man, receive_time, receive_remark
  </sql>
  <select id="selectByExample" parameterType="com.youzhi.model.OmsOrderReturnApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_order_return_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oms_order_return_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oms_order_return_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.youzhi.model.OmsOrderReturnApplyExample">
    delete from oms_order_return_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.youzhi.model.OmsOrderReturnApply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_return_apply (order_id, order_num, company_address_id, 
      good_id, create_time, user_nickname, 
      return_amount, return_name, return_phone, 
      status, handle_man, handle_time, 
      good_pic, good_name, good_count, 
      good_price, good_real_price, reason, 
      description, proof_pics, handle_remark, 
      receive_man, receive_time, receive_remark
      )
    values (#{orderId,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{companyAddressId,jdbcType=INTEGER}, 
      #{goodId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{userNickname,jdbcType=VARCHAR}, 
      #{returnAmount,jdbcType=DECIMAL}, #{returnName,jdbcType=VARCHAR}, #{returnPhone,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{handleMan,jdbcType=VARCHAR}, #{handleTime,jdbcType=TIMESTAMP}, 
      #{goodPic,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, #{goodCount,jdbcType=INTEGER}, 
      #{goodPrice,jdbcType=DECIMAL}, #{goodRealPrice,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{proofPics,jdbcType=VARCHAR}, #{handleRemark,jdbcType=VARCHAR}, 
      #{receiveMan,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, #{receiveRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.youzhi.model.OmsOrderReturnApply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_return_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="companyAddressId != null">
        company_address_id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="returnAmount != null">
        return_amount,
      </if>
      <if test="returnName != null">
        return_name,
      </if>
      <if test="returnPhone != null">
        return_phone,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="handleMan != null">
        handle_man,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="goodPic != null">
        good_pic,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="goodCount != null">
        good_count,
      </if>
      <if test="goodPrice != null">
        good_price,
      </if>
      <if test="goodRealPrice != null">
        good_real_price,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="proofPics != null">
        proof_pics,
      </if>
      <if test="handleRemark != null">
        handle_remark,
      </if>
      <if test="receiveMan != null">
        receive_man,
      </if>
      <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="receiveRemark != null">
        receive_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="companyAddressId != null">
        #{companyAddressId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="returnAmount != null">
        #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnName != null">
        #{returnName,jdbcType=VARCHAR},
      </if>
      <if test="returnPhone != null">
        #{returnPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="handleMan != null">
        #{handleMan,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodPic != null">
        #{goodPic,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodCount != null">
        #{goodCount,jdbcType=INTEGER},
      </if>
      <if test="goodPrice != null">
        #{goodPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodRealPrice != null">
        #{goodRealPrice,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="proofPics != null">
        #{proofPics,jdbcType=VARCHAR},
      </if>
      <if test="handleRemark != null">
        #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="receiveMan != null">
        #{receiveMan,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveRemark != null">
        #{receiveRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.youzhi.model.OmsOrderReturnApplyExample" resultType="java.lang.Integer">
    select count(*) from oms_order_return_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oms_order_return_apply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddressId != null">
        company_address_id = #{record.companyAddressId,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.returnAmount != null">
        return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnName != null">
        return_name = #{record.returnName,jdbcType=VARCHAR},
      </if>
      <if test="record.returnPhone != null">
        return_phone = #{record.returnPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.handleMan != null">
        handle_man = #{record.handleMan,jdbcType=VARCHAR},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodPic != null">
        good_pic = #{record.goodPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodCount != null">
        good_count = #{record.goodCount,jdbcType=INTEGER},
      </if>
      <if test="record.goodPrice != null">
        good_price = #{record.goodPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodRealPrice != null">
        good_real_price = #{record.goodRealPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.proofPics != null">
        proof_pics = #{record.proofPics,jdbcType=VARCHAR},
      </if>
      <if test="record.handleRemark != null">
        handle_remark = #{record.handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveMan != null">
        receive_man = #{record.receiveMan,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveTime != null">
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveRemark != null">
        receive_remark = #{record.receiveRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oms_order_return_apply
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      company_address_id = #{record.companyAddressId,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      return_name = #{record.returnName,jdbcType=VARCHAR},
      return_phone = #{record.returnPhone,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      handle_man = #{record.handleMan,jdbcType=VARCHAR},
      handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      good_pic = #{record.goodPic,jdbcType=VARCHAR},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      good_count = #{record.goodCount,jdbcType=INTEGER},
      good_price = #{record.goodPrice,jdbcType=DECIMAL},
      good_real_price = #{record.goodRealPrice,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      proof_pics = #{record.proofPics,jdbcType=VARCHAR},
      handle_remark = #{record.handleRemark,jdbcType=VARCHAR},
      receive_man = #{record.receiveMan,jdbcType=VARCHAR},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      receive_remark = #{record.receiveRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzhi.model.OmsOrderReturnApply">
    update oms_order_return_apply
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="companyAddressId != null">
        company_address_id = #{companyAddressId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="returnAmount != null">
        return_amount = #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnName != null">
        return_name = #{returnName,jdbcType=VARCHAR},
      </if>
      <if test="returnPhone != null">
        return_phone = #{returnPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="handleMan != null">
        handle_man = #{handleMan,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodPic != null">
        good_pic = #{goodPic,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodCount != null">
        good_count = #{goodCount,jdbcType=INTEGER},
      </if>
      <if test="goodPrice != null">
        good_price = #{goodPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodRealPrice != null">
        good_real_price = #{goodRealPrice,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="proofPics != null">
        proof_pics = #{proofPics,jdbcType=VARCHAR},
      </if>
      <if test="handleRemark != null">
        handle_remark = #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="receiveMan != null">
        receive_man = #{receiveMan,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveRemark != null">
        receive_remark = #{receiveRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzhi.model.OmsOrderReturnApply">
    update oms_order_return_apply
    set order_id = #{orderId,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=VARCHAR},
      company_address_id = #{companyAddressId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      return_name = #{returnName,jdbcType=VARCHAR},
      return_phone = #{returnPhone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      handle_man = #{handleMan,jdbcType=VARCHAR},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      good_pic = #{goodPic,jdbcType=VARCHAR},
      good_name = #{goodName,jdbcType=VARCHAR},
      good_count = #{goodCount,jdbcType=INTEGER},
      good_price = #{goodPrice,jdbcType=DECIMAL},
      good_real_price = #{goodRealPrice,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      proof_pics = #{proofPics,jdbcType=VARCHAR},
      handle_remark = #{handleRemark,jdbcType=VARCHAR},
      receive_man = #{receiveMan,jdbcType=VARCHAR},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      receive_remark = #{receiveRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>